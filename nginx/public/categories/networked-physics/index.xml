<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Networked Physics on Gaffer On Games</title>
    <link>http://new.gafferongames.com/categories/networked-physics/</link>
    <description>Recent content in Networked Physics on Gaffer On Games</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© The Network Protocol Company, Inc.</copyright>
    <lastBuildDate>Sun, 04 Jan 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://new.gafferongames.com/categories/networked-physics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Snapshot Compression</title>
      <link>http://new.gafferongames.com/post/snapshot_compression/</link>
      <pubDate>Sun, 04 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://new.gafferongames.com/post/snapshot_compression/</guid>
      <description>Introduction Hi, I&amp;rsquo;m Glenn Fiedler and welcome to Networked Physics.
In the previous article we sent snapshots of the entire simulation 10 times per-second over the network and interpolated between them to reconstruct a view of the simulation on the other side.
The problem with a low snapshot rate is that interpolation between snapshots adds interpolation delay on top of network latency. At 10 snapshots per-second, the minimum interpolation delay is 100ms, and a more practical minimum considering network jitter is 150ms.</description>
    </item>
    
    <item>
      <title>Snapshots and Interpolation</title>
      <link>http://new.gafferongames.com/post/snapshots_and_interpolation/</link>
      <pubDate>Sun, 30 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://new.gafferongames.com/post/snapshots_and_interpolation/</guid>
      <description>Introduction Hi, I&amp;rsquo;m Glenn Fiedler and welcome to Networked Physics.
In the previous article we networked a physics simulation using deterministic lockstep. Now, in this article we&amp;rsquo;re going to network the same simulation with a completely different technique: snapshot interpolation.
Why a different technique? While deterministic lockstep is very efficient in terms of bandwidth, it&amp;rsquo;s not always possible to make your simulation deterministic. Also, as the player count increases, deterministic lockstep becomes problematic: you can&amp;rsquo;t simulate frame n until you receive input from all players for that frame, so players end up waiting for the most lagged player.</description>
    </item>
    
    <item>
      <title>Deterministic Lockstep</title>
      <link>http://new.gafferongames.com/post/deterministic_lockstep/</link>
      <pubDate>Sat, 29 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://new.gafferongames.com/post/deterministic_lockstep/</guid>
      <description>Introduction Hi, I&amp;rsquo;m Glenn Fiedler and welcome to Networked Physics.
In this article series we&amp;rsquo;re exploring different ways to network a physics simulation. In this article specifically, we&amp;rsquo;re going to network a physics simulation using deterministic lockstep.
Deterministic lockstep is a method of networking a system from one computer to another by sending only the inputs that control that system, rather than the state of that system. In the context of networking a physics simulation, this means we send across a small amount of input, while avoiding sending state like position, orientation, linear velocity and angular velocity per-object.</description>
    </item>
    
    <item>
      <title>The Physics Simulation</title>
      <link>http://new.gafferongames.com/post/the_physics_simulation/</link>
      <pubDate>Fri, 28 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://new.gafferongames.com/post/the_physics_simulation/</guid>
      <description>Introduction Hi, I&amp;rsquo;m Glenn Fiedler and welcome to the first article in Networked Physics.
In this article series we&amp;rsquo;re going to network a physics simulation three different ways: deterministic lockstep, snapshot interpolation and state synchronization.
But before we get to this, lets spend some time exploring the physics simulation we’re going to network.
Your browser does not support the video tag.  Here I’ve setup a simple simulation of a cube in the open source physics engine ODE.</description>
    </item>
    
  </channel>
</rss>